{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSSL\\\\React\\\\demo\\\\Section 20 - Redux Basics\\\\src\\\\components\\\\Counter.js\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classes from \"./Counter.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Counter extends Component {\n  buttonHandler(type) {\n    if (type === 'increment') {\n      this.props.increment();\n    }\n    if (type === 'decrement') {\n      this.props.decrement();\n    }\n    if (type === 'reset') {\n      this.props.reset();\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.counter,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Redux Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.value,\n        children: this.props.counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.buttonHandler(\"increment\").bind(this),\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.buttonHandler(\"reset\").bind(this),\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.buttonHandler(\"decrement\").bind(this),\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    counter: state.counter\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    increment: () => dispatch({\n      type: 'increment'\n    }),\n    decrement: () => dispatch({\n      type: 'decrement'\n    }),\n    reset: () => dispatch({\n      type: 'reset'\n    })\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","map":{"version":3,"names":["Component","connect","classes","jsxDEV","_jsxDEV","Counter","buttonHandler","type","props","increment","decrement","reset","render","className","counter","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onClick","bind","mapStateToProps","state","mapDispatchToProps","dispatch"],"sources":["D:/CSSL/React/demo/Section 20 - Redux Basics/src/components/Counter.js"],"sourcesContent":["import { Component} from 'react';\nimport { connect } from 'react-redux';\nimport classes from \"./Counter.module.css\";\n\nclass Counter extends Component{\n\n  buttonHandler(type) {\n    if (type === 'increment') {\n      this.props.increment();\n    }\n    if (type === 'decrement') {\n      this.props.decrement();\n    }\n    if (type === 'reset') {\n      this.props.reset();\n    }\n  } \n\n  render() {\n    return (\n      <main className={classes.counter}>\n        <h1>Redux Counter</h1>\n        <div className={classes.value}>{this.props.counter}</div>\n        <button onClick={() => this.buttonHandler(\"increment\").bind(this)}>\n          Increment\n        </button>\n        <button onClick={() => this.buttonHandler(\"reset\").bind(this)}>\n          Reset\n        </button>\n        <button onClick={() => this.buttonHandler(\"decrement\").bind(this)}>\n          Decrement\n        </button>\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = state=> {\n  return {\n    counter: state.counter\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    increment: () => dispatch({type: 'increment'}),\n    decrement: () => dispatch({type: 'decrement'}),\n    reset: () => dispatch({type: 'reset'})\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);"],"mappings":";AAAA,SAASA,SAAS,QAAO,OAAO;AAChC,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,OAAO,SAASL,SAAS;EAE7BM,aAAaA,CAACC,IAAI,EAAE;IAClB,IAAIA,IAAI,KAAK,WAAW,EAAE;MACxB,IAAI,CAACC,KAAK,CAACC,SAAS,CAAC,CAAC;IACxB;IACA,IAAIF,IAAI,KAAK,WAAW,EAAE;MACxB,IAAI,CAACC,KAAK,CAACE,SAAS,CAAC,CAAC;IACxB;IACA,IAAIH,IAAI,KAAK,OAAO,EAAE;MACpB,IAAI,CAACC,KAAK,CAACG,KAAK,CAAC,CAAC;IACpB;EACF;EAEAC,MAAMA,CAAA,EAAG;IACP,oBACER,OAAA;MAAMS,SAAS,EAAEX,OAAO,CAACY,OAAQ;MAAAC,QAAA,gBAC/BX,OAAA;QAAAW,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBf,OAAA;QAAKS,SAAS,EAAEX,OAAO,CAACkB,KAAM;QAAAL,QAAA,EAAE,IAAI,CAACP,KAAK,CAACM;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACzDf,OAAA;QAAQiB,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACf,aAAa,CAAC,WAAW,CAAC,CAACgB,IAAI,CAAC,IAAI,CAAE;QAAAP,QAAA,EAAC;MAEnE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTf,OAAA;QAAQiB,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACf,aAAa,CAAC,OAAO,CAAC,CAACgB,IAAI,CAAC,IAAI,CAAE;QAAAP,QAAA,EAAC;MAE/D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTf,OAAA;QAAQiB,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACf,aAAa,CAAC,WAAW,CAAC,CAACgB,IAAI,CAAC,IAAI,CAAE;QAAAP,QAAA,EAAC;MAEnE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEX;AACF;AAEA,MAAMI,eAAe,GAAGC,KAAK,IAAG;EAC9B,OAAO;IACLV,OAAO,EAAEU,KAAK,CAACV;EACjB,CAAC;AACH,CAAC;AACD,MAAMW,kBAAkB,GAAGC,QAAQ,IAAI;EACrC,OAAO;IACLjB,SAAS,EAAEA,CAAA,KAAMiB,QAAQ,CAAC;MAACnB,IAAI,EAAE;IAAW,CAAC,CAAC;IAC9CG,SAAS,EAAEA,CAAA,KAAMgB,QAAQ,CAAC;MAACnB,IAAI,EAAE;IAAW,CAAC,CAAC;IAC9CI,KAAK,EAAEA,CAAA,KAAMe,QAAQ,CAAC;MAACnB,IAAI,EAAE;IAAO,CAAC;EACvC,CAAC;AACH,CAAC;AAED,eAAeN,OAAO,CAACsB,eAAe,EAAEE,kBAAkB,CAAC,CAACpB,OAAO,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}