{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSSL\\\\React\\\\demo\\\\Section 32 - TypeScript\\\\src\\\\components\\\\NewTodo.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef } from \"react\";\nimport classes from './NewTodo.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTodo = props => {\n  _s();\n\n  const todoTextInputRef = useRef(null);\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredText = todoTextInputRef.current.value;\n\n    if (enteredText.trim().length === 0) {\n      return;\n    }\n\n    props.onAddTodo(enteredText);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    className: classes.form,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Todo text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"text\",\n      ref: todoTextInputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTodo, \"1sC+Y33RgTD/2YiEPp+XilOCiTo=\");\n\n_c = NewTodo;\nexport default NewTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTodo\");","map":{"version":3,"names":["useRef","classes","NewTodo","props","todoTextInputRef","submitHandler","event","preventDefault","enteredText","current","value","trim","length","onAddTodo","form"],"sources":["D:/CSSL/React/demo/Section 32 - TypeScript/src/components/NewTodo.tsx"],"sourcesContent":["import { useRef } from \"react\";\r\nimport classes from './NewTodo.module.css';\r\n\r\nconst NewTodo: React.FC<{onAddTodo: (text: string)=>void}> = (props) => {\r\n  const todoTextInputRef = useRef<HTMLInputElement>(null);\r\n  const submitHandler = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    const enteredText = todoTextInputRef.current!.value;\r\n\r\n    if (enteredText.trim().length === 0) {\r\n      return;\r\n    }\r\n\r\n    props.onAddTodo(enteredText);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler} className={classes.form}>\r\n      <label>Todo text</label>\r\n      <input type=\"text\" id=\"text\" ref={todoTextInputRef} />\r\n      <button>Add Todo</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewTodo;\r\n"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,OAAoD,GAAIC,KAAD,IAAW;EAAA;;EACtE,MAAMC,gBAAgB,GAAGJ,MAAM,CAAmB,IAAnB,CAA/B;;EACA,MAAMK,aAAa,GAAIC,KAAD,IAA4B;IAChDA,KAAK,CAACC,cAAN;IACA,MAAMC,WAAW,GAAGJ,gBAAgB,CAACK,OAAjB,CAA0BC,KAA9C;;IAEA,IAAIF,WAAW,CAACG,IAAZ,GAAmBC,MAAnB,KAA8B,CAAlC,EAAqC;MACnC;IACD;;IAEDT,KAAK,CAACU,SAAN,CAAgBL,WAAhB;EACD,CATD;;EAWA,oBACE;IAAM,QAAQ,EAAEH,aAAhB;IAA+B,SAAS,EAAEJ,OAAO,CAACa,IAAlD;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,IAAI,EAAC,MAAZ;MAAmB,EAAE,EAAC,MAAtB;MAA6B,GAAG,EAAEV;IAAlC;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CApBD;;GAAMF,O;;KAAAA,O;AAsBN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}