{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSSL\\\\React\\\\demo\\\\Section 22 - Adv\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: 'Could not fetch event details.'\n    }), {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useLoaderData","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","Response","JSON","stringify","message","status","$RefreshReg$"],"sources":["D:/CSSL/React/demo/Section 22 - Adv/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useLoaderData } from 'react-router-dom';\r\n\r\nimport EventItem from '../components/EventItem';\r\n\r\nfunction EventDetailPage() {\r\n  const data = useLoaderData();\r\n\r\n  return (\r\n    <EventItem event={data.event} />\r\n  );\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nexport async function loader({request, params}) {\r\n  const id = params.eventId;\r\n\r\n  const response = await fetch('http://localhost:8080/events/' + id);\r\n\r\n  if (!response.ok) {\r\n    throw new Response(JSON.stringify({ message: 'Could not fetch event details.' }), {\r\n      status: 500,\r\n    });\r\n  } else {\r\n    return response;\r\n  }\r\n}"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAEhD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,IAAI,GAAGN,aAAa,CAAC,CAAC;EAE5B,oBACEG,OAAA,CAACF,SAAS;IAACM,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEpC;AAACN,EAAA,CANQD,eAAe;EAAA,QACTJ,aAAa;AAAA;AAAAY,EAAA,GADnBR,eAAe;AAQxB,eAAeA,eAAe;AAE9B,OAAO,eAAeS,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAC9C,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAAiC,CAAC,CAAC,EAAE;MAChFC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,OAAOP,QAAQ;EACjB;AACF;AAAC,IAAAN,EAAA;AAAAc,YAAA,CAAAd,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}